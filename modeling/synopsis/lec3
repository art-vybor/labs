Пример:
    (1000.001 0     0    ) (x_1)   (1)
    (0        1.001 0    ) (x_2) = (1)
    (0        0     0.000) (x_3)   (1)

    x_1 = 0.00099     )
    x_2 = 0.99999     ) окр. усечением
    x_3 = 500.00000   )

Пример демонстрирует неустойчивость решения. Представление входных данных с абсолютной погрешностью \Delta x^*=10^{-3} приводит к изменению результата в два и более раз в плоть до катастрофической потери точности, при этом элемент решения x_3 оказывается неопределённым.

Необходимо ввести количественную меру по которой можно предполагать, что решение вычислительной задачи приемлемо или задача является неккоректно поставленной и требует переформулировки. Такой мерой является число обусловленности.

Задача называется хорошо обусловленной, если малым входным погрешностям, соответствуют малые погрешности решения. Устойчивым считается решение не изменяющееся при сколь угодной малых погрешностях на входе. Не всегда возможно обеспечить сколько угодно малые погрешности (вычислительная погрешность, инструментальная погрешность). В связи с чем обычно оперируют понятием малых погрешностей и обосновывают хорошую обусловленность вычислительной задачи.

\Delta y^* <= \nu_{\Delta} \Delta x^*

\nu_{\Delta} абсолютное число обусловленности. Его можно интерпретировать как коэффициент возможного росто погрешностей решения. По отношению к вызвавшей её

\nu_{\Delta} < 1 - вычислительная задача хорошо обусловлена, решение устойчиво и имеет место подавление ошибок результата.

\nu_{\Delta} > 1 - требует дополнительного иследования.

\nu_{\Delta} >> 1 - плохо обусловленая, решение неустойчиво, можеты ...

\nu_{\Delta} -> \inf - плохо обусловлено, неустойчиво, катастрофический рост погрешности.

Аналогично с относительной обусловленностью.


Классификация вычислительных методов.
Вычислительный алгоритм это точное описание действий над входными данными, определяющее вычислительный процесс.
\topline{x} \in X \rightarrow \topline{y} \in Y

Вычислительный алгоритм можно рассматривать как вычислительный метод высокой степени детализации. Вычислительный алгоритм называется корректным, если выполнено три условия:
1) после выполнения конечного число операций элементарных для вычислительной машины преобразовать любой входной набор данных в результат;
2) результат \topline{y} \in Y устойчивый по отношению к малым возмущениям входных данных \topline{x} \in X;
3) обладает вычислительной устойчивостью. Алгоритм называется вычислительно-устойчивым, если вычислительная погрешность результата  стремится к нулю при \epsilon_M -> 0, где \epsilon_M - погрешность хранения чисел в ЭВМ.

\epsilon_M = 0.1
1 + \epsilon^i_M ? 1
\epsilon^i_M = \epsilon^(i-1)_M/2

0.1    |
0.05   |
0.025  |
0.0125 |
0.00625|
...
0.0000*| - погрешность
0.00000|

Вычислительная неустойчивость алгоритма возникает из-за ограничений разрядности использования округления данных ЭВМ. Если условие 2,3 выполнены - алгоритм называется устойчивым, в противном случае неустойчивым.

...
Алгоритм неккоректен и требует переформулировки.

... пример с произведением


Если счёт начинать с минимальных значений, результатом является машинный ноль. При этом результат вычислительной задачи равен 1. Таким образом порядок счёта влияет
... дописать

....


Вычислительные методы.

Вычислительные методы - методы используемые в вычислительной математике для преобразования задач к виду, удобному для реализации на ЭВМ, позволяющие конструировать. 
группы:
1)
2) методы эквивалентных преобразований
3) методы аппроксимации
4) итерационные методы
5) метод статистических испытаний (методы монте-карло)
Последовательность шагов реализацией которых является вычислительный метод.

Погрешность:
1) инструментальная
2) модели
3) методологическая
4) вычислительная

...





Вычисление определённого интеграла посредством квадратурных формул и т.п. Чем
меньше шаг h тем выше точность приближения.
Линеаризация - замена исходной задачи более простой линейной задачей.

Примером является кусочно линейная интерполяция функции, а также решение нелинейного уровнения методом касательных. Выбирается некоторая окрестность предполагаемого решения на которой фрагмент кривой заменяется на прямую (касательную в заданной точке). Метод касательной является примером итерационных методов.
Итерационные методы - методы построения последовательных приближений решения задачи. Принципиален выбор начального приближения. Кроме того, для обеспечения корректности вычислительного алгоритма, необходимо формулировать условие окончания счёта. 
Недостатки итерационных методов: при малой скорости сходимости метода к решению задачи метод оказывается не пригодным для использования в вычислительной технике. Достоинство метода - высокая скорость решения.