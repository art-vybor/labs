LSIP

list processor

все в программе явл-ся списком

для выражения оыбчно используется префиксная нотация (+ 1 2 ) 
в скобках - так назывемые атомы

каждое выражение возвращает значение

уп! - лисп  - дедушка функционального прогаммирования

из лиспа вытекли

common lisp
scheme 

широко используется
бла бла бла
... диалекты лиспа...

попробуем 

что используем

Scheme
пакет Racket (PLT scheme)


запуск - drracket 

при запуске сказать что язык указывается в файле во вкладке Язык

например

--------------------------------
#lang racket

-------------------------------- интерфейс на 2 части разделен, нижняя - на самом деле встроенный аля терминал
> ( / 1 5)
1/5
> (+ 1/3 1/2)
5/6

вообще на сайте есть куча документации, не просто куча пиздец дохуя

http://docs.racket-lang.org/

под windows есть подводный камень

если вы дойдете до создания диалоговых окон то смену языка нужно делать не переключением раскладки, а переключением языка
(просто обычно переключение раскладки тянет за собой язык но тут все не так просто)

false - #f
true  - #t

буду писать что смотрели на паре в инете он показывал на проекторе 
в порядке того как он показывал

+ примеры по разделам ,

разделы 
3.3 	Characters
3.8 	Pairs and Lists
4.4 	Functions (Procedures): lambda
4.5 	Definitions: define 

#f (define const 12)
#f
> const
12
> (+ const 1)
13

4.8 	Sequencing

4.12 	Simple Dispatch: case

4.6 	Local Binding

4.7 	Conditionals

4.9 	Assignment: set!  -- использование set не рекомендуется НА-СТО-Я-ТЕЛЬ-НО

4.10 	Quoting: quote and '

на racket начать писать по очереди все лабы из первых 8ми 

квадратное уравнение пропустить ибо скобок многа

дома рекомендуется посмотреть построение граф интерфейсов =)

задание на дом к следующему вторнику:

написать формальную грамматику которую можно испольовать для синт разбора файла на scheme
что бы программа была представлена в виде дерева

т.е программа для парсинга кода на scheme